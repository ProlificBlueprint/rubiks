$button-size: 45px;
$button-pad: $button-size/2;

.gameControls {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 2;

  .direction_content {
    width: 135px;
    height: 100px;
    margin: 0 auto 0px auto;
    padding: 12px 30px 30px;

    display: grid;
    background: darkred;
    grid-template-columns: repeat(5, 1fr);
    grid-auto-rows: minmax(40px, auto);
    grid-template-areas:
      "cTopLeft cTopLeft   tp    cTopRight   cTopRight"
      "lt centerEmpty   centerEmpty    centerEmpty   rt"
      "cBtmLeft cBtmLeft   bt   cBtmRight   cBtmRight";

    background: #141e30; /* fallback for old browsers */
    background: -webkit-linear-gradient(
      to top,
      #243b55,
      #141e30
    ); /* Chrome 10-25, Safari 5.1-6 */
    background: linear-gradient(
      to top,
      #243b55,
      #141e30
    ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */

    border-top: 2px solid rgba(255, 255, 255, 0.2);
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    border-left: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 10px 10px 0 0;
    box-shadow: inset 0px -7px 18px rgba(0, 0, 0, 0.5),
      5px 17px 6px rgba(0, 0, 0, 0.2);
  }

  .direction_div {
    display: flex;
    justify-content: center;
    align-items: center;
    width: $button-size;
    height: $button-size;
    padding: 10px;
    color: black;
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    position: relative;
    cursor: pointer;
    color: black;
    background: #ffffff;
    border: none;
    font-size: 16px;
    font-family: "Work Sans", sans-serif;
    font-weight: 500;
    letter-spacing: 0.04em;

    mix-blend-mode: color-dodge;
    perspective: 500px;
    transform-style: preserve-3d;
  }
}

.topLeftCorner {
  grid-area: cTopLeft;
}
.topRightCorner {
  grid-area: cTopRight;
}
.bottomLeftcorner {
  grid-area: cBtmLeft;
}
.bottomRightCorner {
  grid-area: cBtmRight;
}

.centerEmpty {
  grid-area: centerEmpty;
}

.left_direction {
  grid-area: lt;
}
.right_direction {
  grid-area: rt;
}
.bottom_direction {
  grid-area: bt;
}
.top_direction {
  grid-area: tp;
}

.direction_div2 {
  &:before,
  &:after {
    --z: 0px;
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    content: "";
    width: 100%;
    height: 100%;
    opacity: 0;
    mix-blend-mode: inherit;
    border-radius: inherit;
    transform-style: preserve-3d;
    transform: translate3d(
      calc(var(--z) * 0px),
      calc(var(--z) * 0px),
      calc(var(--z) * 0px)
    );
  }

  span {
    mix-blend-mode: none;
    display: block;
  }

  &:after {
    background-color: #5d00ff;
  }

  &:before {
    background-color: #ff1731;
  }

  &.active {
    background-color: #fff65b;
    transition: background 0.3s 0.1s;
  }

  &.active:before {
    --z: 0.02;
    animation: translateWobble 2.2s ease forwards;
  }

  &.active:after {
    --z: -0.03;
    animation: translateWobble 2.2s ease forwards;
  }
}

@keyframes rotateAngle {
  0% {
    transform: rotateY(0deg) rotateX(10deg);
    animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
  }
  25% {
    transform: rotateY(20deg) rotateX(10deg);
  }
  50% {
    transform: rotateY(0deg) rotateX(10deg);
    animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
  }
  75% {
    transform: rotateY(-20deg) rotateX(10deg);
  }
  100% {
    transform: rotateY(0deg) rotateX(10deg);
  }
}

@keyframes translateWobble {
  0% {
    opacity: 0;
    transform: translate3d(
      calc(var(--z) * 0px),
      calc(var(--z) * 0px),
      calc(var(--z) * 0px)
    );
  }
  16% {
    transform: translate3d(
      calc(var(--z) * 160px),
      calc(var(--z) * 160px),
      calc(var(--z) * 160px)
    );
  }
  28% {
    opacity: 1;
    transform: translate3d(
      calc(var(--z) * 70px),
      calc(var(--z) * 70px),
      calc(var(--z) * 70px)
    );
  }
  44% {
    transform: translate3d(
      calc(var(--z) * 130px),
      calc(var(--z) * 130px),
      calc(var(--z) * 130px)
    );
  }
  59% {
    transform: translate3d(
      calc(var(--z) * 85px),
      calc(var(--z) * 85px),
      calc(var(--z) * 85px)
    );
  }
  73% {
    transform: translate3d(
      calc(var(--z) * 110px),
      calc(var(--z) * 110px),
      calc(var(--z) * 110px)
    );
  }
  88% {
    opacity: 1;
    transform: translate3d(
      calc(var(--z) * 90px),
      calc(var(--z) * 90px),
      calc(var(--z) * 90px)
    );
  }
  100% {
    opacity: 1;
    transform: translate3d(
      calc(var(--z) * 100px),
      calc(var(--z) * 100px),
      calc(var(--z) * 100px)
    );
  }
}
